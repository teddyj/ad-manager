version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: campaign-builder-postgres
    environment:
      POSTGRES_DB: campaign_builder_dev
      POSTGRES_USER: dev_user
      POSTGRES_PASSWORD: dev_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev_user -d campaign_builder_dev"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - campaign-builder-network

  redis:
    image: redis:7-alpine
    container_name: campaign-builder-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - campaign-builder-network

  # Optional: Database management UI
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: campaign-builder-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@campaign-builder.local
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - campaign-builder-network
    profiles:
      - tools

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:

networks:
  campaign-builder-network:
    driver: bridge 